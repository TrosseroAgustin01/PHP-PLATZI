
* Un proyecto de PHP , necesitamos crearlo con un framework
* Un framework nos permite no volver a crear la rueda
* Si hacemos todo desde cero, demorar√≠amos mucho tiempo, el framework, nos agiliza el trabajo, porque todo viene configurado como: conexiones,plantillas,etc. 
* Sin descuidar la seguridad y rendimiento
* Nos permite enfocarnos en la necesidad y no tanto en la arquitectura del software

* Front Controller

->Es un patr√≥n que nos ayuda a solucionar el problema de acceso √∫nico en la web. Este se utiliza para proporcionar un mecanismo centralizado para manejar solicitudes, 
todas las solicitudes son procesadas por un solo controlador. El controlador puede realizar la autenticaci√≥n / autorizaci√≥n / registro o solicitud de seguimiento, 
entonces la petici√≥n al controlador adecuado.

->En este caso, vamos a lograr que todos pase a trav√©s de index.php, as√≠ centralizaremos los accesos. Adem√°s, 
ya no necesitaremos tener un sistema lleno de include para incluir cabeceras o footers.

    üìÅ Cuando nos referimos a rutas absolutas quiere decir que la ruta comienza en la ra√≠z del directorio.

->Esto es todo lo que contendr√° el archivo index. Este va a cargar todo lo necesario, luego va a disponer de la clase Request porque lo registramos en composer, 
este va a ejecutar el m√©todo enviar.

*Ciclo de Petici√≥n ‚Üí Proceso ‚Üí Respuesta

    ->El sistema arranca en el index.php el cual es la vista de entrada del usuario.
    ->El usuario comienza una petici√≥n y se dispara la clase Request.
    ->La clase Request ejecuta un controlador y un m√©todo del mismo en base a la solicitud del usuario.
    ->Es m√©todo de ese controlador tiene que ser una configuraci√≥n de la clase Response para servirle al usuario de una vista, array, json o pdf que necesite.
